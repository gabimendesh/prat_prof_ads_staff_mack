name: Tag Release
on:
    push:
        branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
  
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
  
      - name: Install dependencies
        run: |
          cd staff-mack-app-frontend
          npm install
  
      - name: Build
        run: |
          cd staff-mack-app-frontend
          npm run build
  
      - name: Deploy to S3
        run: |
          aws s3 sync staff-mack-app-frontend/dist/staff-mack-app-frontend/browser s3://staff-mack-controle-presenca --delete
        env:
          AWS_DEFAULT_REGION: sa-east-1
          AWS_REGION: sa-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  tag_release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # Configuração do git
      - name: Set up Git
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "github-actions@github.com"

      # Extrai a versão do seu aplicativo (exemplo: package.json)
      - name: Extract version
        run: |
          VERSION=$(jq -r '.version' package.json)  # Altere conforme necessário
          echo "Version: $VERSION"

      # Cria a tag com base na versão extraída
      - name: Create Git tag
        run: |
          git tag -a v${VERSION} -m "Release $VERSION"  # Prefixa com 'v' por convenção
          git push origin v${VERSION}  # Envia a tag para o repositório remoto
