name: Tag Release
on:
  push:
    branches:
      - main  # Apenas uma demonstração, você pode ajustar conforme necessário

jobs:
  # Sua configuração de construção e implantação aqui...

  tag_release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Garante que todos os commits estejam disponíveis para acesso

      - name: Extract Git user name
        id: extract_git_user
        run: |
          git log -1 --pretty=format:'%an' ${{ github.event.before }}..${{ github.sha }} > /tmp/git_user_name.txt

      - name: Read Git user name
        id: read_git_user
        run: |
          GIT_USER_NAME=$(cat /tmp/git_user_name.txt)
          echo "::set-env name=GIT_USER_NAME::$GIT_USER_NAME"

      - name: Set up Git
        run: |
          git config --local user.name "${{ env.GIT_USER_NAME }}"
          git config --local user.email "${{ env.GIT_USER_NAME }}@github.com"

      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          echo "::set-output name=latest_tag::$(git describe --tags --abbrev=0)"

      - name: Create new tag
        run: |
          # Extrair o número da versão da última tag
          latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
          # Extrair a parte numérica da tag (removendo o prefixo 'v')
          version=$(echo $latest_tag | sed 's/v//')
          # Incrementar a versão
          version=$((version + 1))
          # Criar a nova tag
          new_tag="v$version"
          git tag -a $new_tag -m "Release $new_tag"
          git push origin $new_tag
