name: Tag Release
on:
    push:
        branches: [ main ]
jobs:
    deploy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
    
        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '20'
    
        - name: Install dependencies
          run: |
            cd staff-mack-app-frontend
            npm install
    
        - name: Build
          run: |
            cd staff-mack-app-frontend
            npm run build
    
        - name: Deploy to S3
          run: |
            aws s3 sync staff-mack-app-frontend/dist/staff-mack-app-frontend/browser s3://staff-mack-controle-presenca --delete
          env:
            AWS_DEFAULT_REGION: sa-east-1
            AWS_REGION: sa-east-1
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    tag_release:
      needs: deploy
      runs-on: ubuntu-latest
      steps:
          - name: Check out code
            uses: actions/checkout@v2
          - name: Initialize mandatory git config
            run: |
                git config user.name "GitHub Actions"
                git config user.email noreply@github.com
          - name: Setup release information
            #get version name from app_versions.gradle file (5.6.2)
            run: |
                versionName=`sed '2q;d' app_versions.gradle | cut -d "=" -f2 | xargs`
                export VERSION_NAME=$versionName
                echo "::set-env name=VERSION_NAME::$VERSION_NAME"
          - name: Extract release notes
            id: extract_release_notes
            uses: ffurrer2/extract-release-notes@v1
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ env.VERSION_NAME }}
              release_name: v${{ env.VERSION_NAME }}
              body: ${{ steps.extract_release_notes.outputs.release_notes }}
              draft: false
              prerelease: false
          - name: Slack notify
            uses: rtCamp/action-slack-notify@master
            env:
              SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_OVER_APP }}
              SLACK_CHANNEL: #over-app-android
              SLACK_TITLE: ðŸš¨ Version ${{ env.VERSION_NAME }} is being published to Google Play Internal Test
              SLACK_MESSAGE: ${{ steps.extract_release_notes.outputs.release_notes }}
              MSG_MINIMAL: true